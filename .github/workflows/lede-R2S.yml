name: lede-R2S

on:
  repository_dispatch:
  workflow_dispatch:
          #  schedule:
          #    - cron:  '0 1 1,15 * *'
jobs:
  lede-R2S:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 1 

    - uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive 
      run: |
        sudo chmod -R +x $GITHUB_WORKSPACE/scripts/*.sh
        ls -alh $GITHUB_WORKSPACE/scripts/*.sh
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E apt-fast -y -qq install build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-pip python3-ply haveged lrzsz scons libpython3-dev
        sudo -E pip3 install pyelftools
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone Source
      run: |
        bash $GITHUB_WORKSPACE/scripts/source_code/lede-R2S.sh
        
    - name: Configuration Customization
      id: configuration
      run: |
        curl -s https://raw.githubusercontent.com/we2oxy/Build-Immortalwrt/master/buildinfo/R2S/lede-R2S.conf | tee /build/lede/.config
        echo -e "127.0.0.1 localhost\n192.168.100.51 openwrt" |tee -a /build/lede/files/etc/hosts
        curl -s https://raw.hellogithub.com/hosts |tee -a /build/lede/files/etc/hosts
        echo -e "1 */1 * * * /bin/sed -i '3,\$d' /etc/hosts && /usr/bin/curl -s https://raw.hellogithub.com/hosts >> /etc/hosts\n5 */1 * * * /usr/sbin/ntpdate cn.ntp.org.cn" | tee -a /build/lede/files/etc/crontabs/root
        cd /build/lede/feeds/helloworld/luci-app-ssr-plus/
        rm -rf po/zh_Hans
        sed -n '/result.encrypt_method/a\                result.fast_open = "1"' root/usr/share/shadowsocksr/subscribe.lua
        sed -i '/result.encrypt_method/a\                result.fast_open = "1"' root/usr/share/shadowsocksr/subscribe.lua

    - name: Defconfig
      id: defconfig
      run: |
        cd /build/lede/ && ls -lash
        make defconfig
        ./scripts/diffconfig.sh > /build/buildinfo/lede-R2S.buildinfo
        echo "########################################"
        cat -n /build/buildinfo/lede-R2S.buildinfo
        echo "########################################"
        
    - name: Deliver buildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: lede_buildinfo_R2S
        path: /build/buildinfo/
        if-no-files-found: ignore
        
    - name: Compile
      id: tools
      run: |
        cd /build/lede/
        sudo chown -R runner:runner /build
        echo -e "$(nproc) thread compile"
        make -j$(($(nproc) + 1)) || make -j1 V=s
        tree bin/
        tree -d bin/
        cd /build/lede/bin/targets/rockchip/armv8 && ls -lSha
        rm -rf $(find /build/lede/bin/targets/ -type d -name "packages")
        cp -rf $(find /build/lede/bin/targets/ -type f) /build/upload/
        cp -rf $(find /build/lede/bin/packages/ -type f -name "*.ipk")  /build/package/
        cd /build/ && zip -qr /build/upload/package_$(date +%F_%H%M%S).zip  package/
        cd /build/upload/
        ls -lh

    - name: Deliver firmware
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: Lede_firmware_R2S
        path: /build/upload/
        if-no-files-found: ignore

    - name: Generate release tag
      id: tag
      run: |
        touch release.txt
        echo -e "http://192.168.100.51\nnetmask 255.255.0.0" > release.txt
        echo "tag_name=Lede_nanopi-r2s" >> $GITHUB_ENV
        echo "build_date=`date +%F_%H%M%S`" >> $GITHUB_ENV

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.tag_name }}_${{ env.build_date }}
        tag_name: ${{ env.tag_name }}_${{ env.build_date }}
        body_path: release.txt
        files: |
          /build/upload/*

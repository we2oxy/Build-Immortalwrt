name: immortalwrt-v21.02.4-r2s

on:
  repository_dispatch:
  workflow_dispatch:
  # schedule:
    # - cron:  '40 16 * * 0,3'

jobs:
  immortalwrt-v21-02-4-r2s:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 6
        delete_run_by_conclusion_pattern: failure,skipped
        delete_workflow_by_state_pattern: deleted

    - uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 12
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}       

    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive 
      run: |
        sudo chmod -R +x $GITHUB_WORKSPACE/scripts/*.sh
        ls -alh $GITHUB_WORKSPACE/scripts/*.sh
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        sudo lsb_release -a
        sudo cat /etc/os-release
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install squashfs-tools $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        svn export -r19250 "https://github.com/openwrt/luci/trunk/modules/luci-base/src" "po2lmo"
        pushd "po2lmo"
        make po2lmo
        sudo rm -rf "/usr/bin/po2lmo"
        sudo cp -fp "po2lmo" "/usr/bin/po2lmo"
        popd
        docker image prune -a -f
        sudo -E swapoff -a
        ulimit -n 4096
        df -hP
        
    - name: Clone Source
      run: |
        sudo mkdir -pv /build/{package,upload,buildinfo}
        sudo chown -R runner:runner /build
        git clone --branch v21.02.4 --single-branch --depth 1 https://github.com/immortalwrt/immortalwrt.git /build/immortalwrt
        git clone --branch master --single-branch --depth 1 https://github.com/fw876/helloworld.git /build/helloworld_master
        cd /build/immortalwrt
        rm -rf tmp/
        sed -n 's/Os/O2/gp' include/target.mk
        sed -i 's/Os/O2/g' include/target.mk
        sed -n 's,-mcpu=generic,-mcpu=cortex-a53+crypto,gp' include/target.mk
        sed -i 's,-mcpu=generic,-mcpu=cortex-a53+crypto,g' include/target.mk
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        curl -s https://raw.githubusercontent.com/we2oxy/Build-Immortalwrt/master/buildinfo/R2S/config.seed > /build/immortalwrt/.config
        sed -i '/CONFIG_BUSYBOX_DEFAULT_FEATURE_IPV6/d;/CONFIG_IPV6/d;/CONFIG_KERNEL_IPV6/d' /build/immortalwrt/.config
        echo -e "CONFIG_PACKAGE_v2raya=y\nCONFIG_PACKAGE_luci-app-v2raya=y\n" >> /build/immortalwrt/.config
        echo "#############################################"
        cat -n /build/immortalwrt/.config
        # ip 
        sed -i 's#192.168.1.1#192.168.100.51#' /build/immortalwrt/package/base-files/files/bin/config_generate
        sed -i 's#255.255.255.0#255.255.0.0#' /build/immortalwrt/package/base-files/files/bin/config_generate
        # init /etc/uci-defaults/
        for i in {crontabs,config,ssrplus,smartdns,uci-defaults};do mkdir -pv /build/immortalwrt/files/etc/${i} ;done
        echo -e 'net.ipv6.conf.all.disable_ipv6=1\nnet.ipv6.conf.default.disable_ipv6=1\nnet.ipv6.conf.lo.disable_ipv6=1'>> /build/immortalwrt/files/etc/sysctl.conf
        # uci 99-default-settings
        cat -n /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        sed -i '/exit 0/d' /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        cat $GITHUB_WORKSPACE/uciconf/R2S/my_sys_uci_custom.txt >>/build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        cat -n /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        echo "0 */1 * * * /usr/sbin/ntpdate ntp.tencent.com && /usr/sbin/hwclock -w" >/build/immortalwrt/files/etc/crontabs/root
        wget -P /build/immortalwrt/files/etc/ https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat
        wget -P /build/immortalwrt/files/etc/ https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat
        ./scripts/feeds update packages
        rm -rf /build/immortalwrt/feeds/packages/lang/golang/golang
        svn export https://github.com/openwrt/packages/branches/openwrt-22.03/lang/golang/golang feeds/packages/lang/golang/golang
        # luci
        rm -rfv /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus
        rm -rfv /build/immortalwrt/feeds/luci/applications/luci-app-smartdns
        rm -rfv /build/immortalwrt/feeds/luci/applications/luci-app-openclash
        rm -rfv /build/immortalwrt/feeds/luci/applications/luci-app-upnp
        rm -rfv /build/immortalwrt/feeds/luci/applications/luci-app-v2raya
        # packages
        rm -rfv /build/immortalwrt/feeds/packages/net/smartdns
        rm -rfv /build/immortalwrt/feeds/packages/net/miniupnpd
        rm -rfv /build/immortalwrt/feeds/packages/net/v2raya
        # rm -rfv /build/immortalwrt/feeds/packages/net/smartdns/Makefile
        for i in {chinadns-ng,dns2socks,dns2tcp,hysteria,ipt2socks,microsocks,naiveproxy,redsocks2,shadowsocks-rust,shadowsocksr-libev,simple-obfs,tcping,trojan,v2ray-core,v2ray-geodata,v2ray-plugin,v2raya,xray-core,xray-plugin} ;do rm -vrf /build/immortalwrt/feeds/packages/net/${i} ;done
        
    - name: Configuration Customization
      id: configuration
      run: |
        cat -n $GITHUB_WORKSPACE/uciconf/R2S/*.txt
        # ttyd
        cp -v $GITHUB_WORKSPACE/uciconf/R2S/ttyd /build/immortalwrt/files/etc/config/
        # smartdns 
        #cp -v $GITHUB_WORKSPACE/uciconf/R2S/custom.conf /build/immortalwrt/files/etc/smartdns/
        svn export https://github.com/immortalwrt/packages/branches/openwrt-21.02/net/smartdns /build/immortalwrt/feeds/packages/net/smartdns
        svn export https://github.com/immortalwrt/luci/branches/openwrt-21.02/applications/luci-app-smartdns /build/immortalwrt/feeds/luci/applications/luci-app-smartdns
        # uci luci-ssr-plus
        curl -s "https://raw.hellogithub.com/hosts" | sed -e '/#/d' -e '/^$/d' | awk '{print $2}' >/build/immortalwrt/files/etc/ssrplus/black.list
        curl -s https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/apple-cn.txt > /build/immortalwrt/files/etc/ssrplus/white.list
        curl -s https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/google-cn.txt >> /build/immortalwrt/files/etc/ssrplus/white.list
        sed -i 's/full://g' /build/immortalwrt/files/etc/ssrplus/white.list
        cat /build/immortalwrt/files/etc/ssrplus/black.list
        cat /build/immortalwrt/files/etc/ssrplus/white.list
        for i in {chinadns-ng,dns2socks,dns2tcp,hysteria,ipt2socks,lua-neturl,microsocks,naiveproxy,redsocks2,shadowsocks-rust,shadowsocksr-libev,simple-obfs,tcping,trojan,v2ray-core,v2ray-geodata,v2ray-plugin,xray-core,xray-plugin} ;do echo "# copy to /build/immortalwrt/feeds/packages/net/${i}" && cp -rv /build/helloworld_master/${i} /build/immortalwrt/feeds/packages/net/${i} ;done
        cp -rf /build/helloworld_master/luci-app-ssr-plus /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus
        sed -i '/exit 0/d' /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        cat $GITHUB_WORKSPACE/uciconf/R2S/my_ssr_uci_custom.txt >>/build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        cat -n /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        sed -n '/result.encrypt_method/a\                result.fast_open = "1"' /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/usr/share/shadowsocksr/subscribe.lua
        sed -i '/result.encrypt_method/a\                result.fast_open = "1"' /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/usr/share/shadowsocksr/subscribe.lua
        # luci-app-openclash
        svn export https://github.com/vernesong/OpenClash/trunk/luci-app-openclash /build/immortalwrt/feeds/luci/applications/luci-app-openclash
        #  ntpd
        sed -i '/^DEFAULT_SERVERS/c\DEFAULT_SERVERS="ntp.tencent.com ntp.ntsc.ac.cn cn.ntp.org.cn time.windows.com time.cloudflare.com time.apple.com"' /build/immortalwrt/feeds/packages/net/ntpd/files/ntpdate.init
        #cat -n /build/immortalwrt/feeds/packages/net/ntpd/files/ntpdate.init
        # upnp
        svn export https://github.com/immortalwrt/packages/branches/openwrt-21.02/net/miniupnpd /build/immortalwrt/feeds/packages/net/miniupnpd
        svn export https://github.com/immortalwrt/luci/branches/openwrt-21.02/applications/luci-app-upnp /build/immortalwrt/feeds/luci/applications/luci-app-upnp
        # v2raya
        svn export https://github.com/zxlhhyccc/luci-app-v2raya/trunk/ /build/immortalwrt/feeds/luci/applications/luci-app-v2raya
        svn export https://github.com/openwrt/packages/branches/openwrt-21.02/net/v2raya /build/immortalwrt/feeds/packages/net/v2raya


    - name: Defconfig
      id: defconfig
      run: |
        cd /build/immortalwrt
        ./scripts/feeds install -a -f
        bash $GITHUB_WORKSPACE/scripts/03_defconfig.sh immortalwrt-v21.02.4-r2s.buildinfo
        
    - name: Deliver buildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: immortalwrt-v21.02.4-r2s-buildinfo
        path: /build/buildinfo/
        if-no-files-found: ignore
        
    - name: Compile
      id: tools
      run: |
        cd /build/immortalwrt/
        echo -e "$(nproc) thread compile"
        #make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        #make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
        #make package/feeds/luci/luci-base/compile V=99
        make -j$(($(nproc) + 1)) || make -j1 V=s
        tree bin/
        tree -d bin/
        cd /build/immortalwrt/bin/targets/rockchip/armv8 && ls -lSha
        
    - name: Prepare artifact
      run: |
        bash $GITHUB_WORKSPACE/scripts/04_packaging.sh
        
    - name: Deliver firmware
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: immortalwrt-v21.02.4-r2s-firmware
        path: /build/upload/
        if-no-files-found: ignore
        
    - name: Generate release tag
      id: tag
      run: |
        touch release.txt
        echo "http://192.168.100.51" > release.txt
        echo "http://immortalwrt.lan" >> release.txt
        echo "netmask 255.255.0.0" >> release.txt
        echo "tag_name=immortalwrt-v21.02.4-r2s" >> $GITHUB_ENV
        echo "build_date=`date +%F_%H%M%S`" >> $GITHUB_ENV
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.tag_name }}_${{ env.build_date }}
        tag_name: ${{ env.tag_name }}_${{ env.build_date }}
        body_path: release.txt
        files: |
          /build/upload/*

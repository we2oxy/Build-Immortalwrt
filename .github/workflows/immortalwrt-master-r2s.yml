name: immortalwrt-master-r2s

on:
  repository_dispatch:
  workflow_dispatch:
  # schedule:
    # - cron:  '40 16 * * 0,3'

jobs:
  immortalwrt-master-r2s:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 3
        
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive 
      run: |
        sudo chmod -R +x $GITHUB_WORKSPACE/scripts/*.sh
        ls -alh $GITHUB_WORKSPACE/scripts/*.sh
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        sudo lsb_release -a
        sudo cat /etc/os-release
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install squashfs-tools $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        docker image prune -a -f
        sudo -E swapoff -a
        ulimit -n 4096
        df -hP
        
    - name: Clone Source
      run: |
        sudo mkdir -pv /build/{package,upload,buildinfo}
        sudo chown -R runner:runner /build
        git clone --branch openwrt-21.02 --single-branch --depth 1 https://github.com/immortalwrt/immortalwrt.git /build/immortalwrt
        cd /build/immortalwrt
        rm -rf tmp/
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        wget -P /build/immortalwrt/ https://raw.githubusercontent.com/we2oxy/Build-Immortalwrt/master/buildinfo/R2S/immortalwrt-master-r2s.buildinfo
        cat immortalwrt-master-r2s.buildinfo > /build/immortalwrt/.config
        mkdir -pv /build/immortalwrt/files/etc/crontabs/
        mkdir -pv /build/immortalwrt/files/etc/config/
        echo "0 */1 * * * /usr/sbin/ntpdate ntp.tencent.com && /usr/sbin/hwclock -w" >/build/immortalwrt/files/etc/crontabs/root
        wget -P /build/immortalwrt/files/etc/config/ https://raw.githubusercontent.com/we2oxy/mynotebook/master/openwrt/files/etc/config/ttyd
        curl -s "https://raw.hellogithub.com/hosts" | sed -e '/#/d' -e '/^$/d' | awk '{print $2}' >/build/immortalwrt/files/etc/ssrplus/black.list
        cat /build/immortalwrt/files/etc/ssrplus/black.list
        
    - name: Configuration Customization
      id: configuration
      run: |
        cp -v /home/runner/work/Build-Immortalwrt/Build-Immortalwrt/uciconf/R2S/my*.txt /build/immortalwrt/
        cat -n /build/immortalwrt/my*.txt
        cat -n /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        cat -n /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        cat /build/immortalwrt/my_sys_uci_custom.txt >>/build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        cat /build/immortalwrt/my_smartdns_uci_custom.txt >>/build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        cat /build/immortalwrt/my_ssr_uci_custom.txt >>/build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        sed -i '/exit 0/d' /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        sed -i '/exit 0/d' /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        echo "exit 0" >> /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        echo "exit 0" >> /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        cat -n /build/immortalwrt/package/emortal/default-settings/files/99-default-settings
        cat -n /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/etc/uci-defaults/luci-ssr-plus
        sed -i 's#192.168.1.1#192.168.100.51#' /build/immortalwrt/package/base-files/files/bin/config_generate
        sed -i 's#255.255.255.0#255.255.0.0#' /build/immortalwrt/package/base-files/files/bin/config_generate
        sed -n '/result.encrypt_method/a\                result.fast_open = "1"' /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/usr/share/shadowsocksr/subscribe.lua
        sed -i '/result.encrypt_method/a\                result.fast_open = "1"' /build/immortalwrt/feeds/luci/applications/luci-app-ssr-plus/root/usr/share/shadowsocksr/subscribe.lua


    - name: Defconfig
      id: defconfig
      run: |
        cd /build/immortalwrt
        bash $GITHUB_WORKSPACE/scripts/03_defconfig.sh immortalwrt-master-r2s.buildinfo
        
    - name: Deliver buildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: immortalwrt-master-r2s-buildinfo
        path: /build/buildinfo/
        if-no-files-found: ignore
        
    - name: Compile
      id: tools
      run: |
        cd /build/immortalwrt/
        echo -e "$(nproc) thread compile"
        make -j$(($(nproc) + 1)) || make -j1 V=s
        tree bin/
        tree -d bin/
        cd /build/immortalwrt/bin/targets/rockchip/armv8 && ls -lSha
        
    - name: Prepare artifact
      run: |
        bash $GITHUB_WORKSPACE/scripts/04_packaging.sh
        
    - name: Deliver firmware
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: immortalwrt-master-r2s-firmware
        path: /build/upload/
        if-no-files-found: ignore
        
    - name: Generate release tag
      id: tag
      run: |
        touch release.txt
        echo "http://192.168.100.51" > release.txt
        echo "http://immortalwrt.lan" >> release.txt
        echo "netmask 255.255.0.0" >> release.txt
        echo "tag_name=immortalwrt-master-r2s" >> $GITHUB_ENV
        echo "build_date=`date +%F_%H%M%S`" >> $GITHUB_ENV
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.tag_name }}_${{ env.build_date }}
        tag_name: ${{ env.tag_name }}_${{ env.build_date }}
        body_path: release.txt
        files: |
          /build/upload/*
